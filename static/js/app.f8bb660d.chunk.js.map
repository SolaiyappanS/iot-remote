{"version":3,"sources":["link.js","components/button.js","components/buttonwithregulator.js","components/buttonwithmodulator.js","App.js","assets/fonts/Anton/Anton-Regular.ttf","assets/background.jpg","assets/bannerbackground.jpg","assets/fonts/Teko/Teko-Regular.ttf"],"names":["HIVE_MQ_WS_LINK","customFonts","require","Button","props","switchTheButton","mqtt","connect","publish","topic","state","isPressed","setState","fontsLoaded","a","async","Font","this","_loadFontsAsync","View","style","styles","wrapper","button","backgroundColor","marginRight","borderWidth","borderColor","icon","faLightbulb","color","size","Text","buttonText","name","TouchableOpacity","onPress","fontFamily","fontSize","Component","StyleSheet","create","borderRadius","padding","flex","paddingLeft","flexDirection","marginVertical","ButtonWithRegulator","increaseFanSpeed","client","regulatorValue","decreaseFanSpeed","faFan","textAlignVertical","display","faMinus","faPlus","marginLeft","ButtonWithModulator","increaseTemperature","temperature","decreaseTemperature","faDigitalTachograph","App","acs","fans","lights","container","ImageBackground","source","bannerimage","title","ScrollView","paddingTop","map","indexOf","marginTop","Platform","OS","StatusBar","currentHeight","justifyContent","alignContent","marginHorizontal","textAlign","paddingBottom","flexWrap","module","exports"],"mappings":"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","file":"static/js/app.f8bb660d.chunk.js","sourcesContent":["export const HIVE_MQ_WS_LINK =\r\n  \"wss://emb-lab-tce:Labemb2022@6781b28934ca4c2b90026e95830e1e6b.s1.eu.hivemq.cloud:8884/mqtt\";\r\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { faLightbulb } from \"@fortawesome/free-solid-svg-icons\";\r\nimport mqtt from \"mqtt/dist/mqtt\";\r\nimport { HIVE_MQ_WS_LINK } from \"../link\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Teko-Regular\": require(\"../assets/fonts/Teko/Teko-Regular.ttf\"),\r\n};\r\n\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPressed: true,\r\n      fontsLoaded: false,\r\n    };\r\n  }\r\n\r\n  switchTheButton = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message 'ON' or 'OFF' to the topic from props\r\n    client.publish(this.props.topic, this.state.isPressed ? \"ON\" : \"OFF\");\r\n    this.setState({ isPressed: !this.state.isPressed });\r\n  };\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    }\r\n    return (\r\n      <View style={styles.wrapper}>\r\n        <View\r\n          style={[\r\n            styles.button,\r\n            {\r\n              backgroundColor: \"#0001\",\r\n              marginRight: 5,\r\n              borderWidth: 5,\r\n              borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n            },\r\n          ]}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faLightbulb}\r\n            color={this.state.isPressed ? \"#777788\" : \"#009851\"}\r\n            size={30}\r\n          />\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.button,\r\n            {\r\n              backgroundColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              borderWidth: 5,\r\n              borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={styles.buttonText}>{this.props.name}</Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            {\r\n              backgroundColor: \"#0001\",\r\n              borderWidth: 5,\r\n              borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n            },\r\n          ]}\r\n          onPress={this.switchTheButton}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Teko-Regular\",\r\n              fontSize: 28,\r\n              color: \"#444\",\r\n            }}\r\n          >\r\n            Click here to {this.state.isPressed ? \"ON\" : \"OFF\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nvar styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: 5,\r\n    padding: 15,\r\n    marginRight: 5,\r\n  },\r\n  buttonText: {\r\n    fontFamily: \"Teko-Regular\",\r\n    fontSize: 28,\r\n    color: \"white\",\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    paddingLeft: 5,\r\n    flexDirection: \"row\",\r\n    marginVertical: 5,\r\n  },\r\n});\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { FontAwesomeIcon as ReactNativeFontAwesome } from \"@fortawesome/react-native-fontawesome\";\r\nimport { faFan, faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport mqtt from \"mqtt/dist/mqtt\";\r\nimport { HIVE_MQ_WS_LINK } from \"../link\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Teko-Regular\": require(\"../assets/fonts/Teko/Teko-Regular.ttf\"),\r\n};\r\n\r\nclass ButtonWithRegulator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false,\r\n      isPressed: true,\r\n      regulatorValue: 3,\r\n    };\r\n  }\r\n\r\n  switchTheButton = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message 'ON' or 'OFF' to the topic from props\r\n    client.publish(this.props.topic, this.state.isPressed ? \"ON\" : \"OFF\");\r\n    this.setState({ isPressed: !this.state.isPressed });\r\n  };\r\n\r\n  increaseFanSpeed = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message Fan Speed to the topic from props\r\n    if (this.state.regulatorValue < 5 && !this.state.isPressed) {\r\n      client.publish(\r\n        this.props.topic,\r\n        \"Speed: \" + (this.state.regulatorValue + 1)\r\n      );\r\n      this.setState({ regulatorValue: this.state.regulatorValue + 1 });\r\n    }\r\n  };\r\n\r\n  decreaseFanSpeed = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message Fan Speed to the topic from props\r\n    if (this.state.regulatorValue > 0 && !this.state.isPressed) {\r\n      client.publish(\r\n        this.props.topic,\r\n        \"Speed: \" + (this.state.regulatorValue - 1)\r\n      );\r\n      this.setState({ regulatorValue: this.state.regulatorValue - 1 });\r\n    }\r\n  };\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    }\r\n    return (\r\n      <View>\r\n        <View style={styles.wrapper}>\r\n          <View\r\n            style={[\r\n              styles.button,\r\n              {\r\n                backgroundColor: \"#0001\",\r\n                marginRight: 5,\r\n                borderWidth: 5,\r\n                borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              },\r\n            ]}\r\n          >\r\n            <ReactNativeFontAwesome\r\n              icon={faFan}\r\n              color={this.state.isPressed ? \"#777788\" : \"#009851\"}\r\n              size={30}\r\n            />\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.button,\r\n              {\r\n                backgroundColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n                borderWidth: 5,\r\n                borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={styles.buttonText}>{this.props.name}</Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button,\r\n              {\r\n                backgroundColor: \"#0001\",\r\n                borderWidth: 5,\r\n                borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              },\r\n            ]}\r\n            onPress={this.switchTheButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Teko-Regular\",\r\n                fontSize: 28,\r\n                color: \"#444\",\r\n                textAlignVertical: \"center\",\r\n              }}\r\n            >\r\n              Click here to {this.state.isPressed ? \"ON\" : \"OFF\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.wrapper,\r\n            {\r\n              display: !this.state.isPressed ? \"flex\" : \"none\",\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button,\r\n              styles.icon,\r\n              {\r\n                backgroundColor:\r\n                  !this.state.isPressed && this.state.regulatorValue > 0\r\n                    ? \"#30a0b0\"\r\n                    : \"#777f88\",\r\n                borderWidth: !this.state.isPressed ? 5 : 0,\r\n              },\r\n            ]}\r\n            onPress={this.decreaseFanSpeed}\r\n          >\r\n            <ReactNativeFontAwesome\r\n              icon={faMinus}\r\n              color={\r\n                !this.state.isPressed && this.state.regulatorValue > 0\r\n                  ? \"#FFFFFF\"\r\n                  : \"#AAAABB\"\r\n              }\r\n              size={30}\r\n            />\r\n          </TouchableOpacity>\r\n          <View\r\n            style={[\r\n              styles.button,\r\n              { backgroundColor: \"#0001\", marginRight: 0 },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Teko-Regular\",\r\n                fontSize: 28,\r\n                color: \"#444\",\r\n                textAlignVertical: \"center\",\r\n              }}\r\n            >\r\n              {this.props.name}'s speed: {this.state.regulatorValue}\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button,\r\n              styles.icon,\r\n              {\r\n                backgroundColor:\r\n                  !this.state.isPressed && this.state.regulatorValue < 5\r\n                    ? \"#30a0b0\"\r\n                    : \"#777f88\",\r\n                borderWidth: !this.state.isPressed ? 5 : 0,\r\n              },\r\n            ]}\r\n            onPress={this.increaseFanSpeed}\r\n          >\r\n            <ReactNativeFontAwesome\r\n              icon={faPlus}\r\n              color={\r\n                !this.state.isPressed && this.state.regulatorValue < 5\r\n                  ? \"#FFFFFF\"\r\n                  : \"#AAAABB\"\r\n              }\r\n              size={30}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nvar styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: 5,\r\n    padding: 15,\r\n    marginRight: 5,\r\n  },\r\n  buttonText: {\r\n    fontFamily: \"Teko-Regular\",\r\n    fontSize: 28,\r\n    color: \"white\",\r\n  },\r\n  icon: {\r\n    marginLeft: 5,\r\n    borderRadius: 50,\r\n    borderColor: \"#0000\",\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    paddingLeft: 5,\r\n    flexDirection: \"row\",\r\n    marginVertical: 5,\r\n  },\r\n});\r\n\r\nexport default ButtonWithRegulator;\r\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { FontAwesomeIcon as ReactNativeFontAwesome } from \"@fortawesome/react-native-fontawesome\";\r\nimport {\r\n  faDigitalTachograph,\r\n  faPlus,\r\n  faMinus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport mqtt from \"mqtt/dist/mqtt\";\r\nimport { HIVE_MQ_WS_LINK } from \"../link\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Teko-Regular\": require(\"../assets/fonts/Teko/Teko-Regular.ttf\"),\r\n};\r\n\r\nclass ButtonWithModulator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false,\r\n      isPressed: true,\r\n      temperature: 20,\r\n    };\r\n  }\r\n\r\n  switchTheButton = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message 'ON' or 'OFF' to the topic from props\r\n    client.publish(this.props.topic, this.state.isPressed ? \"ON\" : \"OFF\");\r\n    this.setState({ isPressed: !this.state.isPressed });\r\n  };\r\n\r\n  increaseTemperature = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message AC's Temperature to the topic from props\r\n    if (this.state.temperature < 25 && !this.state.isPressed) {\r\n      client.publish(\r\n        this.props.topic,\r\n        \"Temperature: \" + (this.state.temperature + 1) + \"° C\"\r\n      );\r\n      this.setState({ temperature: this.state.temperature + 1 });\r\n    }\r\n  };\r\n\r\n  decreaseTemperature = () => {\r\n    var client = mqtt.connect(HIVE_MQ_WS_LINK);\r\n    // publish message AC's Temperature to the topic from props\r\n    if (this.state.temperature > 17 && !this.state.isPressed) {\r\n      client.publish(\r\n        this.props.topic,\r\n        \"Temperature: \" + (this.state.temperature - 1) + \"° C\"\r\n      );\r\n      this.setState({ temperature: this.state.temperature - 1 });\r\n    }\r\n  };\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    }\r\n    return (\r\n      <View>\r\n        <View style={styles.wrapper}>\r\n          <View\r\n            style={[\r\n              styles.button,\r\n              {\r\n                backgroundColor: \"#0001\",\r\n                marginRight: 5,\r\n                borderWidth: 5,\r\n                borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              },\r\n            ]}\r\n          >\r\n            <ReactNativeFontAwesome\r\n              icon={faDigitalTachograph}\r\n              color={this.state.isPressed ? \"#777788\" : \"#009851\"}\r\n              size={30}\r\n            />\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.button,\r\n              {\r\n                backgroundColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n                borderWidth: 5,\r\n                borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={styles.buttonText}>{this.props.name}</Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button,\r\n              {\r\n                backgroundColor: \"#0001\",\r\n                borderWidth: 5,\r\n                borderColor: this.state.isPressed ? \"#777788\" : \"#009851\",\r\n              },\r\n            ]}\r\n            onPress={this.switchTheButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Teko-Regular\",\r\n                fontSize: 28,\r\n                color: \"#444\",\r\n                textAlignVertical: \"center\",\r\n              }}\r\n            >\r\n              Click here to {this.state.isPressed ? \"ON\" : \"OFF\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.wrapper,\r\n            {\r\n              display: !this.state.isPressed ? \"flex\" : \"none\",\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button,\r\n              styles.icon,\r\n              {\r\n                backgroundColor:\r\n                  !this.state.isPressed && this.state.temperature > 17\r\n                    ? \"#30a0b0\"\r\n                    : \"#777f88\",\r\n                borderWidth: !this.state.isPressed ? 5 : 0,\r\n              },\r\n            ]}\r\n            onPress={this.decreaseTemperature}\r\n          >\r\n            <ReactNativeFontAwesome\r\n              icon={faMinus}\r\n              color={\r\n                !this.state.isPressed && this.state.temperature > 17\r\n                  ? \"#FFFFFF\"\r\n                  : \"#AAAABB\"\r\n              }\r\n              size={30}\r\n            />\r\n          </TouchableOpacity>\r\n          <View\r\n            style={[\r\n              styles.button,\r\n              { backgroundColor: \"#0001\", marginRight: 0 },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Teko-Regular\",\r\n                fontSize: 28,\r\n                color: \"#444\",\r\n                textAlignVertical: \"center\",\r\n              }}\r\n            >\r\n              Temp: {this.state.temperature}° C\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button,\r\n              styles.icon,\r\n              {\r\n                backgroundColor:\r\n                  !this.state.isPressed && this.state.temperature < 25\r\n                    ? \"#30a0b0\"\r\n                    : \"#777f88\",\r\n                borderWidth: !this.state.isPressed ? 5 : 0,\r\n              },\r\n            ]}\r\n            onPress={this.increaseTemperature}\r\n          >\r\n            <ReactNativeFontAwesome\r\n              icon={faPlus}\r\n              color={\r\n                !this.state.isPressed && this.state.temperature < 25\r\n                  ? \"#FFFFFF\"\r\n                  : \"#AAAABB\"\r\n              }\r\n              size={30}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nvar styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: 5,\r\n    padding: 15,\r\n    marginRight: 5,\r\n  },\r\n  buttonText: {\r\n    fontFamily: \"Teko-Regular\",\r\n    fontSize: 28,\r\n    color: \"white\",\r\n  },\r\n  icon: {\r\n    marginLeft: 5,\r\n    borderRadius: 50,\r\n    borderColor: \"#0000\",\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    paddingLeft: 5,\r\n    flexDirection: \"row\",\r\n    marginVertical: 5,\r\n  },\r\n});\r\n\r\nexport default ButtonWithModulator;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n  Platform,\r\n  View,\r\n  ScrollView,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport Button from \"./components/button\";\r\nimport ButtonWithRegulator from \"./components/buttonwithregulator\";\r\nimport ButtonWithModulator from \"./components/buttonwithmodulator\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Anton-Regular\": require(\"./assets/fonts/Anton/Anton-Regular.ttf\"),\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    acs: [\r\n      {\r\n        name: \"AC\",\r\n        topic: \"emblab/iotremote/ac\",\r\n      },\r\n    ],\r\n    fans: [\r\n      {\r\n        name: \"Fan 1\",\r\n        topic: \"emblab/iotremote/fan1\",\r\n      },\r\n      {\r\n        name: \"Fan 2\",\r\n        topic: \"emblab/iotremote/fan2\",\r\n      },\r\n      {\r\n        name: \"Fan 3\",\r\n        topic: \"emblab/iotremote/fan3\",\r\n      },\r\n    ],\r\n    lights: [\r\n      {\r\n        name: \"Light 1\",\r\n        topic: \"emblab/iotremote/light1\",\r\n      },\r\n      {\r\n        name: \"Light 2\",\r\n        topic: \"emblab/iotremote/light2\",\r\n      },\r\n      {\r\n        name: \"Light 3\",\r\n        topic: \"emblab/iotremote/light3\",\r\n      },\r\n    ],\r\n    fontsLoaded: false,\r\n  };\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    }\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          style={{ flex: 1 }}\r\n          source={require(\"./assets/background.jpg\")}\r\n        >\r\n          <View>\r\n            <ImageBackground\r\n              style={styles.bannerimage}\r\n              source={require(\"./assets/bannerbackground.jpg\")}\r\n            >\r\n              <Text style={styles.title}>IOT Remote</Text>\r\n            </ImageBackground>\r\n          </View>\r\n          <ScrollView style={{ paddingTop: 15 }}>\r\n            <View style={styles.wrapper}>\r\n              {this.state.acs.map((button) => (\r\n                <ButtonWithModulator\r\n                  key={this.state.acs.indexOf(button)}\r\n                  name={button.name}\r\n                  topic={button.topic}\r\n                />\r\n              ))}\r\n            </View>\r\n            <View style={styles.wrapper}>\r\n              {this.state.fans.map((button) => (\r\n                <ButtonWithRegulator\r\n                  key={this.state.fans.indexOf(button)}\r\n                  name={button.name}\r\n                  topic={button.topic}\r\n                />\r\n              ))}\r\n            </View>\r\n            <View style={styles.wrapper}>\r\n              {this.state.lights.map((button) => (\r\n                <Button\r\n                  key={this.state.lights.indexOf(button)}\r\n                  name={button.name}\r\n                  topic={button.topic}\r\n                />\r\n              ))}\r\n            </View>\r\n            <Text>{\"\\n\\n\\n\"}</Text>\r\n          </ScrollView>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  bannerimage: {\r\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight + 10 : 10,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    marginHorizontal: 16,\r\n    padding: 0,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    textAlignVertical: \"center\",\r\n    fontSize: 40,\r\n    fontFamily: \"Anton-Regular\",\r\n    color: \"white\",\r\n    backgroundColor: \"#102740cc\",\r\n    paddingTop: 25,\r\n    paddingBottom: 25,\r\n  },\r\n  wrapper: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n});\r\nexport default App;\r\n","module.exports = __webpack_public_path__ + \"./fonts/Anton-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/background.ae31b03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bannerbackground.5f3ecd98.jpg\";","module.exports = __webpack_public_path__ + \"./fonts/Teko-Regular.ttf\";"],"sourceRoot":""}